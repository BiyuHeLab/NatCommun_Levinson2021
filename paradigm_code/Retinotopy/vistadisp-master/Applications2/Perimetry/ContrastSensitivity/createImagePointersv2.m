function stimulus = createImagePointersv2(display, stimulus,position)%stimulus = createImagePointers(display, stimulus)%%Replace images within stimulus (stimulus.image) with image pointers%(stimulus.imagePtr).%%Stimulus can be a 1xn array of stimuluses.  It loads the images into%off-screen memory, creates image pointers, and destroys the original%image field (freeing up the memory and speeding up pass-by-copy calls%of stimulus).%%If you're trying to create an image pointer starting at something%other than the first image, use addImagePointer.%%Version2 , date : 3 Mar 2004%Modified by Claudio%The location of the stimulus is defined by user,not center by default%%DATE: 10/16/98%Modified by Bill, Bob, and Ben%%10/27/98	Bob: added code to clean up any non-null image pointers before creating new ones.%10/30/98   Bob: Fixed code that cleans up non-null image pointers for backwards compatability.c = getReservedColor(display, 'background');for stimNum = 1:length(stimulus)	nImages = size(stimulus(stimNum).image,3);	stimulus(stimNum).srcRect = [0,0,size(stimulus(stimNum).image, 2), ...								size(stimulus(stimNum).image, 1)];								%   we do not want to put it at the center%	stimulus(stimNum).destRect = CenterRect(stimulus(stimNum).srcRect, display.rect);%stimulus(stimNum).destRect = [position(1),position(2),size(stimulus(stimNum).image, 2)+position(1),size(stimulus(stimNum).image, 1)+position(2)];x1= round(position(1)-size(stimulus(stimNum).image, 2)/2);  y1 = round(position(2)-size(stimulus(stimNum).image, 1)/2);x2 = round(position(1)+size(stimulus(stimNum).image, 2)/2);y2 = round(position(2)+size(stimulus(stimNum).image, 1)/2);stimulus(stimNum).destRect = [y1,x1,y2,x2];% clean up nicely if any of the imagePtrs are not null.    if isfield(stimulus(stimNum), 'imagePtr')    	nonNull = find(stimulus(stimNum).imagePtr);    	for i=1:length(nonNull)    		% run this from eval to suppress any errors that might ensue if the imagePtr isn't valid    		eval('SCREEN(stimulus(stimNum).imagePtr(nonNull(i)), ''Close'');', '[];');    	end    end    stimulus(stimNum).imagePtr = zeros(nImages, 1);   	for imgNum = 1:nImages		stimulus(stimNum).imagePtr(imgNum) = ...			SCREEN(display.windowPtr, 'OpenOffscreenWindow', ...					c, stimulus(stimNum).srcRect);		SCREEN(stimulus(stimNum).imagePtr(imgNum), 'PutImage', ...			double(stimulus(stimNum).image(:,:,imgNum)), stimulus(stimNum).srcRect);	end	stimulus(stimNum).image = [];	end