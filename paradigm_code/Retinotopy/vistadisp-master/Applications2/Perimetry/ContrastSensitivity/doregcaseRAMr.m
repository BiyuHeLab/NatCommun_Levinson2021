function  [results,testParams]=doregcaseRAMr(display, testParams, stimParams);global keycounter global hrmatrixglobal answercatchglobal ncatchhrmatrix   = zeros(1,4);keycounter=0;results.hrmatrix=[];results.answercatch=[];results.keycounter=[];results.answer1=[];results.positiontask1=[];results.contrast2=[];results.positiontask2=[];results.contrast3=[];results.positiontask3=[];contrast2=[];contrast3=[];positiontask2=[];positiontask3=[];scale=testParams.contrastscale;zscale =size(scale,2);tableIndexAlter = randperm(size(testParams.alternativeVarValues,1));testParams.tableIndexAlter=tableIndexAlter;% TASK 1 % Shows every location at defined medium contrast% If user answer yes, these locations will be evaluated in task2% If user answer no, these locations will be evaluated  in  task3stimParams.contrast=scale(testParams.medcontrastindex);m=1; %index for table of task2 j=1; %index for table of task3 ncatch=1;catchcount=0;for n=1:size(testParams.alternativeVarValues,1)	stimParams.position= testParams.alternativeVarValues(tableIndexAlter(n),:);    [trial, data] = Perimtrial(display, stimParams,testParams);    runPriority = 0;    eventNum = 1:size(trial,1);    material = trial{eventNum,2};	t = soundFreqSweep(100, 500, .1);    cleankeybbuff;	sound(t);    showStimulus(display,material.stimulus,runPriority);	catchcount=catchcount+1;    answer1(n)=getchar;	keycounter=keycounter+1;			%Stop Test if required 			if (answer1(n)==testParams.keystop) | ( size(hrmatrix,1) > testParams.maxtrials )			    				results.hrmatrix=hrmatrix(2:size(hrmatrix,1),:);				results.answercatch=answercatch;				results.keycounter=keycounter;				results.answer1=answer1;				results.positiontask1=positiontask1;				results.contrast2=contrast2;				results.positiontask2=positiontask2;				results.contrast3=contrast3;				results.positiontask3=positiontask3;   				return;		     end   	positiontask1(n,:)= stimParams.position;			if answer1(n)==testParams.keyyes		%Positive answer ,location is registered for task2		positiontask2(m,:)= stimParams.position;	    m=m+1;		hrmatrix(size(hrmatrix,1)+1,:)=[stimParams.position stimParams.contrast 1];		disp([stimParams.position stimParams.contrast 1]);	end	if answer1(n)==testParams.keyno		%Negative answer ,location is registered for task3		positiontask3(j,:)= stimParams.position;	    j=j+1;		hrmatrix(size(hrmatrix,1)+1,:)=[stimParams.position stimParams.contrast 0];		disp([stimParams.position stimParams.contrast 0]);	end    pause(1);	catchtrial;endstop=[];counter=[];;counterdir=[]; % 0 if last ans yes ,1 if last ans nothresh=[];outofrange=[];contrastindex=[];%Task2 if exist('positiontask2')	disp('TASK2')	[contrast2,retflag]=locstaircase(positiontask2,0,testParams,stimParams);else	contrast2=[];end%Task3if exist('positiontask3') & retflag==0	disp('TASK3')	[contrast3,retflag]=locstaircase(positiontask3,1,testParams,stimParams);else	contrast3=[];endresults.hrmatrix=hrmatrix(2:size(hrmatrix,1),:);results.answercatch=answercatch;results.keycounter=keycounter;results.answer1=answer1;results.positiontask1=positiontask1;results.contrast2=contrast2;results.positiontask2=positiontask2;results.contrast3=contrast3;results.positiontask3=positiontask3;