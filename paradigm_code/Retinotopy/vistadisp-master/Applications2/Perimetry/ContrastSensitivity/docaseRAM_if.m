function  [answertricky,keycounter,answer1,ansposition1,contrast2,ansposition2,contrast3,ansposition3,testParams]=doregcaseRAM(display, testParams, stimParams);% Key-press counterkeycounter=0;%scale of contrastscale=testParams.contrastscale;zscale =size(scale,2);ntrials=4;%Generate index randomly to access alternative valuestableIndexAlter = randperm(size(testParams.alternativeVarValues,1));%Saving the random sequencetestParams.tableIndexAlter=tableIndexAlter;%Showing fixation point imagex1= round(testParams.fixloc(1)-size(testParams.imgfixpoint, 2)/2);  y1 = round(testParams.fixloc(2)-size(testParams.imgfixpoint, 1)/2);x2 = round(testParams.fixloc(1)+size(testParams.imgfixpoint, 2)/2);y2 = round(testParams.fixloc(2)+size(testParams.imgfixpoint, 1)/2);screen(display.windowPtr,'PutImage',testParams.imgfixpoint,[y1,x1,y2,x2]);% TASK 1 For each alternative value at medium contrast%stimParams.contrast=scale(testParams.medcontrastindex);m=1; %index for table of task2 ( it is created in task1)j=1; %index for table of task3 ( it is created in task1)ntrick=1;trickcount=0;for r=1:ntrials	for n=1:size(testParams.alternativeVarValues,1)				% Get randomly an alternative values		stimParams.position= testParams.alternativeVarValues(tableIndexAlter(n),:);				[trial, data] = Perimtrial(display, stimParams);		runPriority = 0;		eventNum = 1:size(trial,1);		material = trial{eventNum,2};		t = soundFreqSweep(100, 500, .1);		screen(display.windowPtr,'PutImage',testParams.imgfixpoint,[y1,x1,y2,x2]);		%clean keyboard buffer before showing stimulus		Pressed=1;		while ( Pressed ==1)			Pressed=Charavail;			if(Pressed==1)				getchar;			end		end			sound(t);		showStimulus(display,material.stimulus,runPriority);		trickcount=trickcount+1;				%records the answer for the evaluated position;		%answer1(n)= getchar;		pause(1); %Give some time to patient to answer yes		Pressed=Charavail;		if Pressed==1 			keycounter=keycounter+1;			answer1(r, n)=getchar;		else			answer1(r, n)='n';		end			ansposition1(r, n,:)= stimParams.position;				if answer1(r, n)=='y'			ansposition2(r, m,:)= stimParams.position;			m=m+1;		end			if answer1(r, n)=='n'			ansposition3(r, j,:)= stimParams.position;			j=j+1;		end			%Showing fixation point image				x1= round(testParams.fixloc(1)-size(testParams.imgfixpoint, 2)/2);  		y1 = round(testParams.fixloc(2)-size(testParams.imgfixpoint, 1)/2);		x2 = round(testParams.fixloc(1)+size(testParams.imgfixpoint, 2)/2);		y2 = round(testParams.fixloc(2)+size(testParams.imgfixpoint, 1)/2);		screen(display.windowPtr,'PutImage',testParams.imgfixpoint,[y1,x1,y2,x2]);				%small pause if desired 1 sec		pause(1);				% Do tricky trial to catch lies of patient		if trickcount==5;			trickcount=0;			Pressed=1;			while ( Pressed ==1)				Pressed=Charavail;				if(Pressed==1)					getchar;				end			end					sound(t);			%records the answer for the evaluated position						pause(1); %Give some time to patient to answer yes			Pressed=Charavail;			if Pressed==1 				keycounter=keycounter+1;				answertricky(r, ntrick)=getchar;				ntrick=ntrick+1;			else				answertricky(r, ntrick)='n';				ntrick=ntrick+1;			end			pause(1);			end		% End of tricky trial	endendif(0)		% TASK 2 For each alternative value of tabl2 find lowest threshold	%		trickcount=0;	%For each location Initialize variables 	for n=1:size(ansposition2,1)				% For each position of table 2				stop(n) =0;		counter(n)=0;		counterdir(n)=0; % 0 for yes ,1 for no,begin at 0 because of task1		thresh(n,:)=zeros(1,ntrials);				outofrange(n)=0;		contrastindex(n)= (testParams.medcontrastindex-1);	end	% Do for all locations until all STOPs are ones		while(sum(stop)<size(stop,1))				for n=1:size(ansposition2,1)						if(stop(n)==0)								stimParams.position= ansposition2(n,:);								stimParams.contrast=scale(contrastindex(n));   				[trial, data] = Perimtrial(display, stimParams);				runPriority = 0;				eventNum = 1:size(trial,1);				material = trial{eventNum,2};				t = soundFreqSweep(100, 500, .1);				%Before showing stimulus clean keyboard buffer				Pressed=1;				while ( Pressed ==1)					Pressed=Charavail;					if(Pressed==1)						getchar;					end				end										sound(t);				showStimulus(display,material.stimulus,runPriority);				trickcount=trickcount+1;								%records the answer for the evaluated position;				%answer= getchar;				pause(1); %Give some time to patient to answer yes				Pressed=Charavail;				if Pressed==1 					keycounter=keycounter+1;					answer=getchar;				else					answer='n';				end										if answer=='y'										if counterdir(n)==1 						thresh(n,counter(n)+1)=stimParams.contrast;						%disp(contrast);						counter(n)=counter(n)+1;						counterdir(n)=0;						if counter(n)==ntrials							stop(n)=1;						end															end									if contrastindex(n) <= 1						stop(n)=1;						contrast2(n)=scale(1);						outofrange(n)=1;					end					contrastindex(n) = contrastindex(n)-1;				end							if answer=='n'										if counterdir(n)==0 						thresh(n,counter(n)+1)=stimParams.contrast;						%disp(contrast);						counter(n)=counter(n)+1;						counterdir(n)=1;						if counter(n)==ntrials							stop(n)=1;						end										end									if contrastindex(n) >= zscale						stop(n) =1;						contrast2(n) = scale(zscale);						outofrange(n)=1;					end									contrastindex(n) = contrastindex(n)+1;					end							%Showing fixation point image								x1= round(testParams.fixloc(1)-size(testParams.imgfixpoint, 2)/2);  				y1 = round(testParams.fixloc(2)-size(testParams.imgfixpoint, 1)/2);				x2 = round(testParams.fixloc(1)+size(testParams.imgfixpoint, 2)/2);				y2 = round(testParams.fixloc(2)+size(testParams.imgfixpoint, 1)/2);				screen(display.windowPtr,'PutImage',testParams.imgfixpoint,[y1,x1,y2,x2]);								pause(1)								% Do tricky trial to catch lies of patient				if trickcount==9;					trickcount==0;					%clean keyboard buffer before showing stimulus					Pressed=1;					while ( Pressed ==1)						Pressed=Charavail;						if(Pressed==1)							getchar;						end					end									sound(t);					%records the answer for the evaluated position										pause(1); %Give some time to patient to answer yes					Pressed=Charavail;					if Pressed==1 						keycounter=keycounter+1;						answertricky(ntrick)=getchar;						ntrick=ntrick+1;					else						answertricky(ntrick)='n';						ntrick=ntrick+1;					end																	pause(1);					end				% End of tricky trial															end % of inner if				end %of for next below big-while		end % of big-while		%for each point calculate avg of corners !!!		for n=1:size(ansposition2,1)				if (outofrange(n)==0)			contrast2(n)= sum(thresh(n,:))/size(thresh(n,:),2);		end		end % task	%TASK 3 NEW	%For each location Initialize variables 	trickcount=0;	clear stop,counter,counterdir,thresh,outofrange,contrastindex;	for n=1:size(ansposition3,1)				% For each position of table 2				stop(n) =0;		counter(n)=0;		counterdir(n)=1; % 0 for yes ,1 for no		thresh(n,:)=zeros(1,ntrials);				outofrange(n)=0;		contrastindex(n)= (testParams.medcontrastindex+1);	end	% Do for all locations until all STOPs are ones		while(sum(stop)<size(stop,1))				for n=1:size(ansposition3,1)						if (stop(n)==0)									stimParams.position= ansposition3(n,:);				stimParams.contrast=scale(contrastindex(n));   				[trial, data] = Perimtrial(display, stimParams);				runPriority = 0;				eventNum = 1:size(trial,1);				material = trial{eventNum,2};				t = soundFreqSweep(100, 500, .1);								%clean keyboard buffer before showing stimulus				Pressed=1;				while ( Pressed ==1)					Pressed=Charavail;					if(Pressed==1)						getchar;					end				end										sound(t);				showStimulus(display,material.stimulus,runPriority);				trickcount=trickcount+1;				%records the answer for the evaluated position;				%answer= getchar;				pause(1); %Give some time to patient to answer yes				Pressed=Charavail;				if Pressed==1 					keycounter=keycounter+1;					answer=getchar;				else					answer='n';				end										if answer=='y'										if counterdir(n)==1 						thresh(n,counter(n)+1)=stimParams.contrast;						%disp(contrast);						counter(n)=counter(n)+1;						counterdir(n)=0;						if counter(n)==ntrials							stop(n)=1;						end															end									if contrastindex(n) <= 1						stop(n)=1;						contrast3(n)=scale(1);						outofrange(n)=1;					end					contrastindex(n) = contrastindex(n)-1;				end							if answer=='n'										if counterdir(n)==0 						thresh(n,counter(n)+1)=stimParams.contrast;						%disp(contrast);						counter(n)=counter(n)+1;						counterdir(n)=1;						if counter(n)==ntrials							stop(n)=1;						end										end									if contrastindex(n) >= zscale						stop(n) =1;						contrast3(n) = scale(zscale);						outofrange(n)=1;					end									contrastindex(n) = contrastindex(n)+1;					end							%Showing fixation point image								x1= round(testParams.fixloc(1)-size(testParams.imgfixpoint, 2)/2);  				y1 = round(testParams.fixloc(2)-size(testParams.imgfixpoint, 1)/2);				x2 = round(testParams.fixloc(1)+size(testParams.imgfixpoint, 2)/2);				y2 = round(testParams.fixloc(2)+size(testParams.imgfixpoint, 1)/2);				screen(display.windowPtr,'PutImage',testParams.imgfixpoint,[y1,x1,y2,x2]);								pause(1);				% Do tricky trial to catch lies of patient				if trickcount==9					trickcount=0;										%clean keyboard buffer before showing stimulus					Pressed=1;					while ( Pressed ==1)						Pressed=Charavail;						if(Pressed==1)							getchar;						end					end									sound(t);					%records the answer for the evaluated position										pause(1); %Give some time to patient to answer yes					Pressed=Charavail;					if Pressed==1 						keycounter=keycounter+1;						answertricky(ntrick)=getchar;						ntrick=ntrick+1;					else						answertricky(ntrick)='n';						ntrick=ntrick+1;					end																	pause(1);					end				% End of tricky trial							end % inner if					end %of for below big-while	end % of big-while		%for each point calculate avg of corners !!!		for n=1:size(ansposition3,1)				if (outofrange(n)==0)			contrast3(n)= sum(thresh(n,:))/size(thresh(n,:),2);		end		end % taskend%END TASK3 NEW